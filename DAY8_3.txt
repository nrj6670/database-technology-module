Cursors
---------

1. Prepare a program to display the comma separated list of employee names in following format

   Deptno    Employees
   -------   ------------
   10        Scott, Smith, Jones
   20        Allen, Ford
   30 

SOLUTION:-

	CREATE PROCEDURE p15()
	BEGIN
		DECLARE DEPT_NUM INT;
		DECLARE EMPLOYEES_NAME VARCHAR(300);
		DECLARE EMPLOYEE_NAME VARCHAR(20);
		DECLARE INNER_LOOP_COUNTER, OUTER_LOOP_COUNTER INT;
		DECLARE CUR CURSOR FOR SELECT DISTINCT(DEPTNO) FROM emp ORDER BY DEPTNO;
		SELECT COUNT(DISTINCT(DEPTNO)) INTO OUTER_LOOP_COUNTER FROM emp;
		CREATE TEMPORARY TABLE DEPTS_RECORD(DEPTNO INT, EMPLOYEES_NAME VARCHAR(300));
		OPEN CUR;
		MY_LOOP : LOOP
			IF OUTER_LOOP_COUNTER=0 THEN
				LEAVE MY_LOOP;
			END IF;
			FETCH CUR INTO DEPT_NUM;
			SET EMPLOYEES_NAME = "";
			BEGIN
				DECLARE DEPT_CUR CURSOR FOR SELECT ENAME FROM emp WHERE DEPTNO=DEPT_NUM;
				SELECT COUNT(DEPTNO) INTO INNER_LOOP_COUNTER FROM emp WHERE DEPTNO=DEPT_NUM;
				OPEN DEPT_CUR;
				DEPT_LOOP : LOOP
				IF INNER_LOOP_COUNTER=0 THEN
					LEAVE DEPT_LOOP;
				END IF;
				FETCH DEPT_CUR INTO EMPLOYEE_NAME;
				SET EMPLOYEES_NAME = CONCAT(EMPLOYEE_NAME,", ",EMPLOYEES_NAME);
				SET INNER_LOOP_COUNTER = INNER_LOOP_COUNTER - 1;
				END LOOP DEPT_LOOP;
				CLOSE DEPT_CUR;
			END;
			INSERT INTO DEPTS_RECORD VALUES(DEPT_NUM, EMPLOYEES_NAME);
			SET OUTER_LOOP_COUNTER = OUTER_LOOP_COUNTER - 1;
		END LOOP MY_LOOP;
		CLOSE CUR;
		SELECT * FROM DEPTS_RECORD;
		DROP TABLE DEPTS_RECORD;
		END//

2. Prepare a program to show the details in following format

    Deptno   Dname      Employees
	-------  -------    -------------
	10        SALES     Scott, Smith, Jones

SOLUTION:-

	CREATE PROCEDURE p16()
	BEGIN
		DECLARE DEPT_NUM INT;
		DECLARE DEPT_NAME VARCHAR(15);
		DECLARE EMPLOYEES_NAME VARCHAR(300);
		DECLARE EMPLOYEE_NAME VARCHAR(20);
		DECLARE INNER_LOOP_COUNTER, OUTER_LOOP_COUNTER INT;
		DECLARE CUR CURSOR FOR SELECT DISTINCT(DEPTNO) FROM emp ORDER BY DEPTNO;
		SELECT COUNT(DISTINCT(DEPTNO)) INTO OUTER_LOOP_COUNTER FROM emp;
		CREATE TEMPORARY TABLE DEPTS_RECORD(DEPTNO INT, DEPT_NAME VARCHAR(15),EMPLOYEES_NAME VARCHAR(300));
		OPEN CUR;
		MY_LOOP : LOOP
			IF OUTER_LOOP_COUNTER=0 THEN
				LEAVE MY_LOOP;
			END IF;
			FETCH CUR INTO DEPT_NUM;
			SET EMPLOYEES_NAME = "";
			SELECT DNAME INTO DEPT_NAME FROM dept WHERE DEPTNO=DEPT_NUM;
			BEGIN
				DECLARE DEPT_CUR CURSOR FOR SELECT ENAME FROM emp WHERE DEPTNO=DEPT_NUM;
				SELECT COUNT(DEPTNO) INTO INNER_LOOP_COUNTER FROM emp WHERE DEPTNO=DEPT_NUM;
				OPEN DEPT_CUR;
				DEPT_LOOP : LOOP
					IF INNER_LOOP_COUNTER=0 THEN
						LEAVE DEPT_LOOP;
					END IF;
					FETCH DEPT_CUR INTO EMPLOYEE_NAME;
					SET EMPLOYEES_NAME = CONCAT(EMPLOYEE_NAME,", ",EMPLOYEES_NAME);
					SET INNER_LOOP_COUNTER = INNER_LOOP_COUNTER - 1;
				END LOOP DEPT_LOOP;
				CLOSE DEPT_CUR;
			END;
			INSERT INTO DEPTS_RECORD VALUES(DEPT_NUM, DEPT_NAME, EMPLOYEES_NAME);
			SET OUTER_LOOP_COUNTER = OUTER_LOOP_COUNTER - 1;
		END LOOP MY_LOOP;
		CLOSE CUR;
		SELECT * FROM DEPTS_RECORD;
		DROP TABLE DEPTS_RECORD;
		END//
	
3. For performance testing we are trying to increase number of records by 10 times for each department. For eg: If there are 3 employees in dept 10 then we should be able to increase the employee count to 30 using same / random values 

eg:

+-------+--------+-----------+------+------------+------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+--------+-----------+------+------------+------+------+--------+
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300 | NULL |     10 |


should become


+-------+--------+-----------+------+------------+------+------+--------+
| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+--------+-----------+------+------------+------+------+--------+
|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7783 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7784 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7785 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7786 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
|  7787 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450 | NULL |     10 |
...........
|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7840 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7841 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7842 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7843 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
|  7844 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000 | NULL |     10 |
...........
|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300 | NULL |     10 |
	
SOLUTION:-

	CREATE PROCEDURE p17()
	BEGIN
		DECLARE EMP_NO,SALARY,DEPT_NO,MGR_NO,COMMISION INT;
		DECLARE E_NAME,JOB VARCHAR(20);
		DECLARE HIRE_DATE DATE;
		DECLARE INNER_LOOP_COUNTER INT;
		DECLARE RECORD_COUNT INT;
		DECLARE NEW_EMP_NO INT;
		DECLARE EMPS_CUR CURSOR FOR SELECT EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO FROM emp ORDER BY DEPTNO;
		CREATE TEMPORARY TABLE emp2(EMPNO INT, ENAME VARCHAR(20), JOB VARCHAR(20), MGR INT, HIREDATE DATE, SAL INT, COMM INT, DEPTNO INT);
		SELECT COUNT(*) INTO RECORD_COUNT FROM emp;
		OPEN EMPS_CUR; 
		OUTER_LOOP : LOOP
			IF RECORD_COUNT=0 THEN
				LEAVE OUTER_LOOP;
			END IF;
			FETCH EMPS_CUR INTO EMP_NO,E_NAME,JOB,MGR_NO,HIRE_DATE,SALARY,COMMISION,DEPT_NO;
			SELECT EMP_NO,E_NAME,JOB,MGR_NO,HIRE_DATE,SALARY,COMMISION,DEPT_NO;
			SET INNER_LOOP_COUNTER=0;
			INNER_LOOP : LOOP
				IF INNER_LOOP_COUNTER=30 THEN
					LEAVE INNER_LOOP;
				END IF;
				SET NEW_EMP_NO = EMP_NO + INNER_LOOP_COUNTER;
				INSERT INTO emp2 VALUES(NEW_EMP_NO,E_NAME,JOB,MGR_NO,HIRE_DATE,SALARY,COMMISION,DEPT_NO);
				SET INNER_LOOP_COUNTER = INNER_LOOP_COUNTER + 1;
			END LOOP INNER_LOOP;
			SET RECORD_COUNT = RECORD_COUNT - 1;
		END LOOP OUTER_LOOP;
		CLOSE EMPS_CUR;
		SELECT * FROM emp2;
		DROP TABLE emp2;
		END // 
	
4. Prepare a program to create clone of all tables in given schema
