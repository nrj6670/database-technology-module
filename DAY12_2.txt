* Create database EMP and Make Collection With name "EMPL" and Follow Queries 

*Created Database
> use emp
 switched to DB emp
 
*Create Collection
> db.createCollection("empl")

*Insert Records Into EMPL Collection
> db.empl.insert([
 {no:1,name:"ST",salary:2000,role:"OB"},
 {no:2,name:"MSD",salary:1500,role:"WK"},
 {no:3,name:"YS",salary:1000,role:"ALR"},
 {no:4,name:"RD",salary:1000,role:"MOB"},
 {no:5,name:"RS",salary:500,role:"OB"},
 {no:6,name:"BK",salary:500,role:"MOB"},
 {no:7,name:"VK",salary:300,role:"BW"},
 {no:8,name:"JB",salary:400,role:"BW"},
 {no:9,name:"HP",salary:400,role:"ALR"},
 {no:10,name:"VS",salary:300,role:"OB"}])

*Update Salary Of Employee where Name is "ST" by +8000

SOLUTION:-

	db.empl.updateOne({name: "ST"}, {$inc: {salary: 8000}});
	WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

	db.empl.find({name: "ST"});
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 10000, "role" : "OB" }
	

*Update Salary Of All Employee by giving an increment of +4000 each

SOLUTION:-

	db.empl.updateMany({}, {$inc: {salary: 4000}});
	{ "acknowledged" : true, "matchedCount" : 10, "modifiedCount" : 10 }

*update role of "MSD" as "C and WK"

SOLUTION:-

	db.empl.updateOne({name: "MSD"}, {$set: {role: "C and WK"}});
	{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

	db.empl.find({name: "MSD"});
	{ "_id" : ObjectId("6104fe035da9af8738046c5d"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C and WK" }

*Add a New Field remark to document with name "RS" set Remark as WC

SOLUTION:-

	db.empl.aggregate([{$match: {name: "RS"}}, {$addFields: {remark: "WC"}}]);
	{ "_id" : ObjectId("6104fe035da9af8738046c60"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB", "remark" : "WC" }

*Add a New Field As Number 11,name AK,Salary 10000,role coch without using insert statement. But for Doing So You should have a Record Added woth number 11.

SOLTUION:-

	db.empl.updateOne({no: 11}, {$set: {name: "AK", salary: 10000, role: "Coach"}});
	{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

	db.empl.find({no: 11});
	{ "_id" : ObjectId("6105026c5da9af8738046c68"), "no" : 11, "name" : "AK", "role" : "Coach", "salary" : 10000 }

*remove added New Field
SOLUTION:-

	db.empl.updateOne({no: 11}, {$unset: {name: "", salary: 0, role: ""}});
	{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

	db.empl.find({no: 11})
	{ "_id" : ObjectId("6105014d5da9af8738046c66"), "no" : 11 }

*Update the Field "RD" by multiplying with salary by 2

SOLUTION:-

	
	 db.empl.updateOne({name: "RD"}, {$mul: {salary: 2}});
	{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }

	db.empl.findOne({name: "RD"})
{
        "_id" : ObjectId("6104fe035da9af8738046c5f"),
        "no" : 4,
        "name" : "RD",
        "salary" : 2000,
        "role" : "MOB"
}


*To Find Document From the empl collection where name begins with S

SOLUTION:-

	db.empl.find({name: /^S+.*$/})
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }

*To Find Document From the empl collection where name begins with R

SOLUTION:-
	
	db.empl.find({name: /^R+.*$/})

	{ "_id" : ObjectId("6104fe035da9af8738046c5f"), "no" : 4, "name" : "RD", "salary" : 2000, "role" : "MOB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c60"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }

*To Find Document From the empl collection where name ends with K

SOLUTION:-

	
	 db.empl.find({name: /^.*K$/})
	{ "_id" : ObjectId("6104fe035da9af8738046c61"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c62"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }


*To Find Document From the empl collection where name ends with D

SOLUTION:-

	db.empl.find({name: /^.*D$/})
	{ "_id" : ObjectId("6104fe035da9af8738046c5d"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C and WK" }
	{ "_id" : ObjectId("6104fe035da9af8738046c5f"), "no" : 4, "name" : "RD", "salary" : 2000, "role" : "MOB" }

*To Find Document From the empl collection where name has S in any position

SOLUTION:-

	 db.empl.find({name: /^.*S+.*$/})
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c5d"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C and WK" }
	{ "_id" : ObjectId("6104fe035da9af8738046c5e"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
	{ "_id" : ObjectId("6104fe035da9af8738046c60"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c65"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Regular Expression
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

(Note: Use Case sensitive allow For that write in Option: "i")

* To Find Document From the empl collection where name begins with S

SOLUTION:-

	db.empl.find({name: /^S+.*$/i});
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
	{ "_id" : ObjectId("610504da5da9af8738046c69"), "name" : "stuart" }

* To Find Document From the empl collection where name begins with S

SOLUTION:-

	db.empl.find({name: /^S+.*$/i});
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
	{ "_id" : ObjectId("610504da5da9af8738046c69"), "name" : "stuart" }

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 Use of $in and $nin (in and notin)
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
(Note: There will not use {} braces in that $in and $nin)

* Display Documents where in empl collection Field have OB,MOB 

SOLUTION:-

	db.empl.find({role: {$in: ["OB", "MOB"]}});
	{ "_id" : ObjectId("6104fe035da9af8738046c5c"), "no" : 1, "name" : "ST", "salary" : 14000, "role" : "OB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c5f"), "no" : 4, "name" : "RD", "salary" : 2000, "role" : "MOB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c60"), "no" : 5, "name" : "RS", "salary" : 4500, "role" : "OB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c61"), "no" : 6, "name" : "BK", "salary" : 4500, "role" : "MOB" }
	{ "_id" : ObjectId("6104fe035da9af8738046c65"), "no" : 10, "name" : "VS", "salary" : 4300, "role" : "OB" }

* Display Documents where in empl collection Field not have OB,MOB

SOLUTION:-

	db.empl.find({role: {$nin: ["OB", "MOB"]}});
	{ "_id" : ObjectId("6104fe035da9af8738046c5d"), "no" : 2, "name" : "MSD", "salary" : 5500, "role" : "C and WK" }
	{ "_id" : ObjectId("6104fe035da9af8738046c5e"), "no" : 3, "name" : "YS", "salary" : 5000, "role" : "ALR" }
	{ "_id" : ObjectId("6104fe035da9af8738046c62"), "no" : 7, "name" : "VK", "salary" : 4300, "role" : "BW" }
	{ "_id" : ObjectId("6104fe035da9af8738046c63"), "no" : 8, "name" : "JB", "salary" : 4400, "role" : "BW" }
	{ "_id" : ObjectId("6104fe035da9af8738046c64"), "no" : 9, "name" : "HP", "salary" : 4400, "role" : "ALR" }
	{ "_id" : ObjectId("6105026c5da9af8738046c68"), "no" : 11 }
	{ "_id" : ObjectId("610504da5da9af8738046c69"), "name" : "stuart" }