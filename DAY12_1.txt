Insert Documents in emp collection
> db.emp.insert([
{eno:1,ename:"Sachin",sal:6000,desig:"manager",dept:"Purchase"},
{eno:2,ename:"Dhoni",sal:5000,desig:"manager",dept:"Sales"},
{eno:3,ename:"Kohli",sal:3000,desig:"clerk",dept:"Admin"},
{eno:4,ename:"Dravid",sal:4000,desig:"manager",dept:"Purchase"},
{eno:5,ename:"Bumrah",sal:3500,desig:"manager",dept:"Sales"},
{eno:6,ename:"Jadeja",sal:2500,desig:"clerk",dept:"Admin"},
{eno:7,ename:"Rohit",sal:4000,desig:"manager",dept:"Sales"}])

1) List all emplyees name with their salary who are in admin department.
SOLUTION:-

	db.employees.find({dept: "Admin"}, {ename:1, sal:1, _id:0}).pretty();
	{ "ename" : "Kohli", "sal" : 3000 }
	{ "ename" : "Jadeja", "sal" : 2500 }

2) List all emplyees name with their salary and designation who are in Purchase department.

SOLUTION:- 
	db.employees.find({dept: "Purchase"}, {ename:1, sal:1, _id:0, desig:1}).pretty();
	{ "ename" : "Sachin", "sal" : 6000, "desig" : "manager" }
	{ "ename" : "Dravid", "sal" : 4000, "desig" : "manager" }


3) List all employees no, name, salary who are in the Sales department and Designation is Manager.

SOLUTION:-

	db.employees.find({$and : [{dept: "Sales"}, {desig: "manager"}]}).pretty();
{
        "_id" : ObjectId("6104021bd4ba38a842dd9d8b"),
        "eno" : 2,
        "ename" : "Dhoni",
        "sal" : 5000,
        "desig" : "manager",
        "dept" : "Sales"
}
{
        "_id" : ObjectId("6104021bd4ba38a842dd9d8e"),
        "eno" : 5,
        "ename" : "Bumrah",
        "sal" : 3500,
        "desig" : "manager",
        "dept" : "Sales"
}
{
        "_id" : ObjectId("6104021bd4ba38a842dd9d90"),
        "eno" : 7,
        "ename" : "Rohit",
        "sal" : 4000,
        "desig" : "manager",
        "dept" : "Sales"
}


4) calculate Annual salary of each emplyees

SOLUTION:-

	db.employees.aggregate( [ {$project : {eno : 1,ename : 1,_id:0,annual_salary : {$multiply : ["$sal" , 12]}} } ] );
	{ "eno" : 1, "ename" : "Sachin", "annual_salary" : 72000 }
	{ "eno" : 2, "ename" : "Dhoni", "annual_salary" : 60000 }
	{ "eno" : 3, "ename" : "Kohli", "annual_salary" : 36000 }
	{ "eno" : 4, "ename" : "Dravid", "annual_salary" : 48000 }
	{ "eno" : 5, "ename" : "Bumrah", "annual_salary" : 42000 }
	{ "eno" : 6, "ename" : "Jadeja", "annual_salary" : 30000 }
	{ "eno" : 7, "ename" : "Rohit", "annual_salary" : 48000 }

5) Convert the names of the emplyees in Lower case and display only no and name of each emplyees.

SOLUTION:-

	db.employees.aggregate({$project: {_id: 0, eno: 1, name: {$toLower: "$ename"}}});
	{ "eno" : 1, "name" : "sachin" }
	{ "eno" : 2, "name" : "dhoni" }
	{ "eno" : 3, "name" : "kohli" }
	{ "eno" : 4, "name" : "dravid" }
	{ "eno" : 5, "name" : "bumrah" }
	{ "eno" : 6, "name" : "jadeja" }
	{ "eno" : 7, "name" : "rohit" }


6) Display each document of the collection emplyee the total salary of each emplyee should be displayed department wise.
 	db.emp.aggregate({$group: {_id: "$dept", total_salary: {$sum: "$sal"}}}, );
	{ "_id" : "Purchase", "total_salary" : 10000 }
	{ "_id" : "Sales", "total_salary" : 12500 }
	{ "_id" : "Admin", "total_salary" : 5500 }
7) Findout Total Salary manager designation wise.

SOLUTION:-

	 db.emp.aggregate({$match: {desig: "manager"}}, {$group: {_id: "desig", total_salary: {$sum: "$sal"}}} );
	{ "_id" : "desig", "total_salary" : 22500 }

8) Find The Average Salary of each department in emp collection.

SOLUTION:-

	 db.employees.aggregate({$group: {_id: "$dept", max_sal: {$max: "$sal"}}});
	 { "_id" : "Purchase", "max_sal" : 6000 }
	 { "_id" : "Admin", "max_sal" : 3000 }
	 { "_id" : "Sales", "max_sal" : 5000 }

9) Find The MAX Salary of each department in emp collection.

SOLUTION:-

	db.employees.aggregate({$group: {_id: "$dept", avg_sal: {$avg: "$sal"}}});
	{ "_id" : "Purchase", "avg_sal" : 5000 }
	{ "_id" : "Admin", "avg_sal" : 2750 }
	{ "_id" : "Sales", "avg_sal" : 4166.666666666667 }

10)update The Document with null value in desig field where name is kohli.

SOLUTION:-
	db.employees.updateOne({ename: "Kohli"}, {$set: {dept: null}});
	db.employees.findOne({ename: "Kohli"});
	{
        	"_id" : ObjectId("6104021bd4ba38a842dd9d8c"),
        	"eno" : 3,
        	"ename" : "Kohli",
       		"sal" : 3000,
        	"desig" : "clerk",
        	"dept" : null
	}
	
11) To remove design Field having Null Values in emp Collection.

SOLUTION:-	
	
	db.employees.remove({desig: null});

========================

>db.foods.insert([
{_id:1,fruits:['banana','apple','cherry']},{_id:2,fruits:['orange','watermelon','mango']},{_id:3,fruits:['pinaple','strawberry','grapes']},{_id:4,fruits:['banana','strawberry','grapes']},{_id:5,fruits:['orange','grapes']}])

display those documents from in food collection which has fruits array consituted of banana,apple,cherry 

SOLUTION:-

	db.foods.find({fruits: {$in: ["banana", "apple", "cherry"]}}).pretty();
	{ "_id" : 1, "fruits" : [ "banana", "apple", "cherry" ] }
	{ "_id" : 4, "fruits" : [ "banana", "strawberry", "grapes" ] }

display those documents From food Collection which has fruits array having a banana as an element.
SOLUTION:-

	db.foods.find({fruits: {$in: ["banana"]}}).pretty();
	{ "_id" : 1, "fruits" : [ "banana", "apple", "cherry" ] }
	{ "_id" : 4, "fruits" : [ "banana", "strawberry", "grapes" ] }